public static File getTempFileWithProgress(String path, String filename, DxApplication app, RecoverySystem.ProgressListener progressListener) { long max_size = 1024L * 1024L; try { byte[] sha1b = app.getSha256(); File f = new File(app.getFilesDir(),path); if(!f.exists()) { return null; } File cacheDir = app.getCacheDir(); long cacheDirSize = app.getCacheDir().getTotalSpace(); if (cacheDirSize > max_size) { cacheDir = app.getExternalCacheDir(); } String suffix = "."+filename.split("\\.")[filename.split("\\.").length-1]; if(new File(cacheDir).exists()) { return new File(cacheDir); } cleanDir(Objects.requireNonNull(cacheDir); cleanDir(Objects.requireNonNull(cacheDir); File tmp = File.createTempFile(filename.replace(suffix,""),suffix,cacheDir); }catch (Exception e) { e.printStackTrace(); progressListener.onProgress(100); } }